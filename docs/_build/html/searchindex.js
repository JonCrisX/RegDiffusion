Search.setIndex({"docnames": ["index", "modules", "regdiffusion", "regdiffusion.data", "regdiffusion.models"], "filenames": ["index.rst", "modules.rst", "regdiffusion.rst", "regdiffusion.data.rst", "regdiffusion.models.rst"], "titles": ["Welcome to regdiffusion\u2019s documentation!", "regdiffusion", "regdiffusion package", "regdiffusion.data package", "regdiffusion.models package"], "terms": {"index": 0, "modul": [0, 1], "search": 0, "page": 0, "packag": 1, "subpackag": 1, "data": [1, 2], "submodul": 1, "beelin": [1, 2], "microglia": [1, 2], "util": [1, 2], "content": 1, "model": [1, 2], "evalu": 1, "grnevalu": [1, 2], "grn": 1, "extract_node_2hop_neighborhood": [1, 2], "extract_node_neighbor": [1, 2], "extract_node_neighbors_as_indic": [1, 2], "extract_node_sourc": [1, 2], "extract_node_sources_as_indic": [1, 2], "extract_node_target": [1, 2], "extract_node_targets_as_indic": [1, 2], "generate_adj_list": [1, 2], "to_hdf5": [1, 2], "visualize_local_neighborhood": [1, 2], "read_hdf5": [1, 2], "logger": 1, "lightlogg": [1, 2], "set_config": [1, 2], "start": [1, 2], "log": [1, 2, 3], "finish": [1, 2], "to_df": [1, 2], "save": [1, 2], "check_early_stop": [1, 2], "load_logg": [1, 2], "trainer": 1, "regdiffusiontrain": [1, 2], "forward_pass": [1, 2], "get_adj": [1, 2, 4], "get_grn": [1, 2], "train": [1, 2, 4], "training_curv": [1, 2], "linear_beta_schedul": [1, 2], "power_beta_schedul": [1, 2], "cell_type_separ": [2, 3], "download_beelin": [2, 3], "load_beelin": [2, 3], "load_beeline_ground_truth": [2, 3], "download_regdiffusion_data": [2, 3], "load_atlas_microglia": [2, 3], "load_hammond_microglia": [2, 3], "download_fil": [2, 3], "block": [2, 4], "forward": [2, 4], "geneembed": [2, 4], "i_minus_a": [2, 4], "get_adj_": [2, 4], "get_gene_emb": [2, 4], "get_sampled_adj_": [2, 4], "soft_threshold": [2, 4], "sinusoidalpositionembed": [2, 4], "class": [2, 4], "ground_truth": 2, "gene_nam": 2, "metric": 2, "auroc": 2, "aupr": 2, "auprr": 2, "ep": 2, "epr": 2, "sourc": [2, 3, 4], "base": [2, 4], "object": 2, "A": [2, 4], "gener": 2, "infer": [2, 4], "paramet": [2, 3, 4], "np": 2, "ndarrai": 2, "list": [2, 4], "either": [2, 3], "2d": 2, "numpi": 2, "arrai": 2, "hold": 2, "ground": [2, 3], "truth": [2, 3], "each": 2, "row": [2, 3], "i": [2, 3, 4], "an": 2, "edg": 2, "includ": 2, "name": 2, "target": 2, "node": 2, "For": [2, 4], "exampl": 2, "b": 2, "c": 2, "1d": 2, "gene": [2, 3, 4], "make": 2, "sure": 2, "order": 2, "same": 2, "adjac": [2, 4], "matrix": [2, 4], "support": 2, "current": 2, "adj_matrix": 2, "tf_name": 2, "none": [2, 4], "top_gene_percentil": 2, "int": [2, 4], "analyz": 2, "regulatori": 2, "network": 2, "between": [2, 4], "transcript": 2, "factor": 2, "The": [2, 4], "expect": [2, 4], "shape": 2, "In": 2, "mani": 2, "case": 2, "when": 2, "tf": 2, "ar": [2, 4], "specifi": [2, 4], "we": [2, 3], "have": 2, "squar": 2, "predict": 2, "weight": 2, "probabl": 2, "float": [2, 4], "To": 2, "creat": 2, "you": 2, "need": [2, 4], "least": 2, "two": 2, "thing": 2, "correspond": [2, 3], "can": 2, "further": 2, "your": 2, "hdf5": 2, "format": 2, "us": [2, 4], "method": 2, "load": [2, 3], "function": [2, 4], "thi": [2, 4], "If": [2, 3, 4], "veri": 2, "larg": 2, "space": 2, "concern": 2, "mai": 2, "consid": 2, "provid": [2, 4], "valu": [2, 4], "calcul": 2, "cutoff": 2, "point": 2, "everi": [2, 4], "whose": 2, "absolut": 2, "below": 2, "set": [2, 3], "zero": 2, "later": 2, "spars": 2, "reduc": 2, "requir": 2, "come": 2, "visual": 2, "top": 2, "level": 2, "interfac": 2, "all": [2, 4], "option": 2, "onli": [2, 3], "k": 2, "kept": 2, "other": 2, "str": [2, 3], "20": 2, "datafram": 2, "panda": 2, "local": 2, "neighborhood": 2, "2": 2, "hop": 2, "around": 2, "select": [2, 3], "": 2, "singl": [2, 3, 4], "inspect": 2, "node_s": 2, "size": [2, 4], "direct": 2, "neighbor": 2, "sort": 2, "3": [2, 4], "column": [2, 3], "dict": 2, "dictionari": 2, "It": 2, "slightli": 2, "faster": 2, "than": 2, "version": 2, "from": [2, 3, 4], "simpli": 2, "file_path": [2, 3], "as_spars": 2, "bool": 2, "fals": 2, "file": 2, "prefer": 2, "most": 2, "path": 2, "whether": 2, "8": 2, "edge_width": 2, "1": [2, 4], "0": [2, 3, 4], "5": [2, 4], "font_siz": 2, "30": 2, "node_group_dict": 2, "cdn_resourc": 2, "remot": 2, "notebook": 2, "true": [2, 3], "vi": 2, "j": 2, "width": 2, "1st": 2, "2nd": 2, "font": 2, "label": 2, "kei": 2, "being": 2, "group": 2, "color": 2, "where": [2, 3], "resourc": 2, "default": [2, 4], "boolean": 2, "indic": 2, "happen": 2, "jupyt": 2, "read": 2, "see": 2, "document": 2, "detail": [2, 4], "result_dir": 2, "result_log": 2, "log_dat": 2, "lightweight": 2, "run": [2, 4], "complet": 2, "take": [2, 4], "inspir": 2, "w": 2, "environ": 2, "also": 2, "multipl": 2, "separ": 2, "experi": 2, "dir": 2, "within": [2, 4], "date": 2, "subdirectori": 2, "variabl": 2, "wai": 2, "custom": 2, "config": 2, "configur": 2, "python": 2, "memori": [2, 3], "futur": 2, "export": 2, "note": 2, "new": 2, "log_dict": 2, "step": [2, 3, 4], "contain": 2, "perform": [2, 4], "save_now": 2, "end": [2, 3], "tidi": 2, "convert": 2, "item": 2, "10": 2, "json": 2, "exp_arrai": 2, "cell_typ": 2, "devic": 2, "cuda": 2, "t": [2, 4], "5000": 2, "start_nois": 2, "0001": 2, "end_nois": 2, "02": 2, "lr_nn": 2, "001": 2, "lr_adj": 2, "weight_decay_nn": 2, "weight_decay_adj": 2, "01": 2, "sparse_loss_coef": 2, "25": 2, "adj_dropout": [2, 4], "batch_siz": 2, "128": 2, "n_step": 2, "1000": 2, "train_split": 2, "train_split_se": 2, "123": 2, "eval_on_n_step": 2, "100": 2, "time_dim": [2, 4], "64": 2, "celltype_dim": [2, 4], "4": [2, 3, 4], "hidden_dim": [2, 4], "16": [2, 4], "init_coef": [2, 4], "compil": 2, "initi": [2, 4], "x_0": 2, "diffus": [2, 4], "pass": [2, 4], "torch": 2, "floattensor": 2, "tensor": 2, "express": 2, "cell": [2, 3, 4], "longtensor": 2, "time": [2, 4], "mean_schedul": 2, "mean": 2, "schedul": 2, "std_schedul": 2, "std": 2, "timestep": 2, "power": 2, "analyt": 2, "sc_data": 3, "cell_type_element_indic": 3, "sep": 3, "_": 3, "save_dir": 3, "remove_zip": 3, "data_dir": 3, "benchmark_data": 3, "hesc": 3, "benchmark_set": 3, "500_string": 3, "download": 3, "necessari": 3, "root": 3, "folder": 3, "locat": 3, "benchmark": 3, "dataset": 3, "choos": 3, "among": 3, "hhep": 3, "mdc": 3, "mesc": 3, "mhsc": 3, "gm": 3, "l": 3, "1000_string": 3, "500_non": 3, "chip": 3, "1000_non": 3, "500_chip": 3, "seq": 3, "1000_chip": 3, "500_lofgof": 3, "1000_lofgof": 3, "lofgof": 3, "avail": 3, "return": 3, "first": [3, 4], "element": 3, "scanpi": 3, "second": 3, "type": [3, 4], "tupl": 3, "file_nam": 3, "scp795": 3, "http": 3, "singlecel": 3, "broadinstitut": 3, "org": 3, "single_cel": 3, "studi": 3, "transcriptom": 3, "atla": 3, "mous": 3, "cerebellum": 3, "summari": 3, "just": 3, "count": 3, "ha": 3, "been": 3, "transform": 3, "hammond": 3, "p100": 3, "male": 3, "mice": 3, "url": 3, "chunk_siz": 3, "1024": 3, "in_dim": 4, "out_dim": 4, "x": 4, "ct": 4, "defin": 4, "comput": 4, "call": 4, "should": 4, "overridden": 4, "subclass": 4, "although": 4, "recip": 4, "one": 4, "instanc": 4, "afterward": 4, "instead": 4, "sinc": 4, "former": 4, "care": 4, "regist": 4, "hook": 4, "while": 4, "latter": 4, "silent": 4, "ignor": 4, "them": 4, "n_gene": 4, "gene_dim": 4, "n_celltyp": 4, "architectur": 4, "pleas": 4, "refer": 4, "our": 4, "paper": 4, "nois": 4, "knowledg": 4, "probabilist": 4, "neural": 4, "number": 4, "dimens": 4, "embed": 4, "would": 4, "celltyp": 4, "integ": 4, "hidden": 4, "layer": 4, "percentag": 4, "drop": 4, "dure": 4, "coeffici": 4, "multipli": 4, "regul": 4, "norm": 4, "tau": 4, "dim": 4, "theta": 4, "10000": 4}, "objects": {"": [[2, 0, 0, "-", "regdiffusion"]], "regdiffusion": [[3, 0, 0, "-", "data"], [2, 0, 0, "-", "evaluator"], [2, 0, 0, "-", "grn"], [2, 0, 0, "-", "logger"], [4, 0, 0, "-", "models"], [2, 0, 0, "-", "trainer"]], "regdiffusion.data": [[3, 0, 0, "-", "beeline"], [3, 0, 0, "-", "microglia"], [3, 0, 0, "-", "utils"]], "regdiffusion.data.beeline": [[3, 1, 1, "", "cell_type_separator"], [3, 1, 1, "", "download_beeline"], [3, 1, 1, "", "load_beeline"], [3, 1, 1, "", "load_beeline_ground_truth"]], "regdiffusion.data.microglia": [[3, 1, 1, "", "download_regdiffusion_data"], [3, 1, 1, "", "load_atlas_microglia"], [3, 1, 1, "", "load_hammond_microglia"]], "regdiffusion.data.utils": [[3, 1, 1, "", "download_file"]], "regdiffusion.evaluator": [[2, 2, 1, "", "GRNEvaluator"]], "regdiffusion.evaluator.GRNEvaluator": [[2, 3, 1, "", "evaluate"]], "regdiffusion.grn": [[2, 2, 1, "", "GRN"], [2, 1, 1, "", "read_hdf5"]], "regdiffusion.grn.GRN": [[2, 3, 1, "", "extract_node_2hop_neighborhood"], [2, 3, 1, "", "extract_node_neighbors"], [2, 3, 1, "", "extract_node_neighbors_as_indices"], [2, 3, 1, "", "extract_node_sources"], [2, 3, 1, "", "extract_node_sources_as_indices"], [2, 3, 1, "", "extract_node_targets"], [2, 3, 1, "", "extract_node_targets_as_indices"], [2, 3, 1, "", "generate_adj_list"], [2, 3, 1, "", "to_hdf5"], [2, 3, 1, "", "visualize_local_neighborhood"]], "regdiffusion.logger": [[2, 2, 1, "", "LightLogger"], [2, 1, 1, "", "load_logger"]], "regdiffusion.logger.LightLogger": [[2, 3, 1, "", "check_early_stopping"], [2, 3, 1, "id0", "finish"], [2, 3, 1, "id1", "log"], [2, 3, 1, "id2", "save"], [2, 3, 1, "id3", "set_configs"], [2, 3, 1, "id4", "start"], [2, 3, 1, "id5", "to_df"]], "regdiffusion.models": [[4, 0, 0, "-", "regdiffusion"]], "regdiffusion.models.regdiffusion": [[4, 2, 1, "", "Block"], [4, 2, 1, "", "GeneEmbeddings"], [4, 2, 1, "", "RegDiffusion"], [4, 2, 1, "", "SinusoidalPositionEmbeddings"]], "regdiffusion.models.regdiffusion.Block": [[4, 3, 1, "", "forward"]], "regdiffusion.models.regdiffusion.GeneEmbeddings": [[4, 3, 1, "", "forward"]], "regdiffusion.models.regdiffusion.RegDiffusion": [[4, 3, 1, "", "I_minus_A"], [4, 3, 1, "", "forward"], [4, 3, 1, "", "get_adj"], [4, 3, 1, "", "get_adj_"], [4, 3, 1, "", "get_gene_emb"], [4, 3, 1, "", "get_sampled_adj_"], [4, 3, 1, "", "soft_thresholding"]], "regdiffusion.models.regdiffusion.SinusoidalPositionEmbeddings": [[4, 3, 1, "", "forward"]], "regdiffusion.trainer": [[2, 2, 1, "", "RegDiffusionTrainer"], [2, 1, 1, "", "linear_beta_schedule"], [2, 1, 1, "", "power_beta_schedule"]], "regdiffusion.trainer.RegDiffusionTrainer": [[2, 3, 1, "", "forward_pass"], [2, 3, 1, "", "get_adj"], [2, 3, 1, "", "get_grn"], [2, 3, 1, "", "train"], [2, 3, 1, "", "training_curves"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"welcom": 0, "regdiffus": [0, 1, 2, 3, 4], "": 0, "document": 0, "indic": 0, "tabl": 0, "packag": [2, 3, 4], "subpackag": 2, "submodul": [2, 3, 4], "evalu": 2, "modul": [2, 3, 4], "grn": 2, "logger": 2, "trainer": 2, "content": [2, 3, 4], "data": 3, "beelin": 3, "microglia": 3, "util": 3, "model": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Welcome to regdiffusion\u2019s documentation!": [[0, "welcome-to-regdiffusion-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "regdiffusion": [[1, "regdiffusion"]], "regdiffusion package": [[2, "regdiffusion-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"]], "regdiffusion.evaluator module": [[2, "module-regdiffusion.evaluator"]], "regdiffusion.grn module": [[2, "module-regdiffusion.grn"]], "regdiffusion.logger module": [[2, "module-regdiffusion.logger"]], "regdiffusion.trainer module": [[2, "module-regdiffusion.trainer"]], "Module contents": [[2, "module-regdiffusion"], [3, "module-regdiffusion.data"], [4, "module-regdiffusion.models"]], "regdiffusion.data package": [[3, "regdiffusion-data-package"]], "regdiffusion.data.beeline module": [[3, "module-regdiffusion.data.beeline"]], "regdiffusion.data.microglia module": [[3, "module-regdiffusion.data.microglia"]], "regdiffusion.data.utils module": [[3, "module-regdiffusion.data.utils"]], "regdiffusion.models package": [[4, "regdiffusion-models-package"]], "regdiffusion.models.regdiffusion module": [[4, "module-regdiffusion.models.regdiffusion"]]}, "indexentries": {"grn (class in regdiffusion.grn)": [[2, "regdiffusion.grn.GRN"]], "grnevaluator (class in regdiffusion.evaluator)": [[2, "regdiffusion.evaluator.GRNEvaluator"]], "lightlogger (class in regdiffusion.logger)": [[2, "regdiffusion.logger.LightLogger"]], "regdiffusiontrainer (class in regdiffusion.trainer)": [[2, "regdiffusion.trainer.RegDiffusionTrainer"]], "check_early_stopping() (regdiffusion.logger.lightlogger method)": [[2, "regdiffusion.logger.LightLogger.check_early_stopping"]], "evaluate() (regdiffusion.evaluator.grnevaluator method)": [[2, "regdiffusion.evaluator.GRNEvaluator.evaluate"]], "extract_node_2hop_neighborhood() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.extract_node_2hop_neighborhood"]], "extract_node_neighbors() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.extract_node_neighbors"]], "extract_node_neighbors_as_indices() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.extract_node_neighbors_as_indices"]], "extract_node_sources() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.extract_node_sources"]], "extract_node_sources_as_indices() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.extract_node_sources_as_indices"]], "extract_node_targets() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.extract_node_targets"]], "extract_node_targets_as_indices() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.extract_node_targets_as_indices"]], "finish() (regdiffusion.logger.lightlogger method)": [[2, "id0"], [2, "regdiffusion.logger.LightLogger.finish"]], "forward_pass() (regdiffusion.trainer.regdiffusiontrainer method)": [[2, "regdiffusion.trainer.RegDiffusionTrainer.forward_pass"]], "generate_adj_list() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.generate_adj_list"]], "get_adj() (regdiffusion.trainer.regdiffusiontrainer method)": [[2, "regdiffusion.trainer.RegDiffusionTrainer.get_adj"]], "get_grn() (regdiffusion.trainer.regdiffusiontrainer method)": [[2, "regdiffusion.trainer.RegDiffusionTrainer.get_grn"]], "linear_beta_schedule() (in module regdiffusion.trainer)": [[2, "regdiffusion.trainer.linear_beta_schedule"]], "load_logger() (in module regdiffusion.logger)": [[2, "regdiffusion.logger.load_logger"]], "log() (regdiffusion.logger.lightlogger method)": [[2, "id1"], [2, "regdiffusion.logger.LightLogger.log"]], "module": [[2, "module-regdiffusion"], [2, "module-regdiffusion.evaluator"], [2, "module-regdiffusion.grn"], [2, "module-regdiffusion.logger"], [2, "module-regdiffusion.trainer"], [3, "module-regdiffusion.data"], [3, "module-regdiffusion.data.beeline"], [3, "module-regdiffusion.data.microglia"], [3, "module-regdiffusion.data.utils"], [4, "module-regdiffusion.models"], [4, "module-regdiffusion.models.regdiffusion"]], "power_beta_schedule() (in module regdiffusion.trainer)": [[2, "regdiffusion.trainer.power_beta_schedule"]], "read_hdf5() (in module regdiffusion.grn)": [[2, "regdiffusion.grn.read_hdf5"]], "regdiffusion": [[2, "module-regdiffusion"]], "regdiffusion.evaluator": [[2, "module-regdiffusion.evaluator"]], "regdiffusion.grn": [[2, "module-regdiffusion.grn"]], "regdiffusion.logger": [[2, "module-regdiffusion.logger"]], "regdiffusion.trainer": [[2, "module-regdiffusion.trainer"]], "save() (regdiffusion.logger.lightlogger method)": [[2, "id2"], [2, "regdiffusion.logger.LightLogger.save"]], "set_configs() (regdiffusion.logger.lightlogger method)": [[2, "id3"], [2, "regdiffusion.logger.LightLogger.set_configs"]], "start() (regdiffusion.logger.lightlogger method)": [[2, "id4"], [2, "regdiffusion.logger.LightLogger.start"]], "to_df() (regdiffusion.logger.lightlogger method)": [[2, "id5"], [2, "regdiffusion.logger.LightLogger.to_df"]], "to_hdf5() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.to_hdf5"]], "train() (regdiffusion.trainer.regdiffusiontrainer method)": [[2, "regdiffusion.trainer.RegDiffusionTrainer.train"]], "training_curves() (regdiffusion.trainer.regdiffusiontrainer method)": [[2, "regdiffusion.trainer.RegDiffusionTrainer.training_curves"]], "visualize_local_neighborhood() (regdiffusion.grn.grn method)": [[2, "regdiffusion.grn.GRN.visualize_local_neighborhood"]], "cell_type_separator() (in module regdiffusion.data.beeline)": [[3, "regdiffusion.data.beeline.cell_type_separator"]], "download_beeline() (in module regdiffusion.data.beeline)": [[3, "regdiffusion.data.beeline.download_beeline"]], "download_file() (in module regdiffusion.data.utils)": [[3, "regdiffusion.data.utils.download_file"]], "download_regdiffusion_data() (in module regdiffusion.data.microglia)": [[3, "regdiffusion.data.microglia.download_regdiffusion_data"]], "load_atlas_microglia() (in module regdiffusion.data.microglia)": [[3, "regdiffusion.data.microglia.load_atlas_microglia"]], "load_beeline() (in module regdiffusion.data.beeline)": [[3, "regdiffusion.data.beeline.load_beeline"]], "load_beeline_ground_truth() (in module regdiffusion.data.beeline)": [[3, "regdiffusion.data.beeline.load_beeline_ground_truth"]], "load_hammond_microglia() (in module regdiffusion.data.microglia)": [[3, "regdiffusion.data.microglia.load_hammond_microglia"]], "regdiffusion.data": [[3, "module-regdiffusion.data"]], "regdiffusion.data.beeline": [[3, "module-regdiffusion.data.beeline"]], "regdiffusion.data.microglia": [[3, "module-regdiffusion.data.microglia"]], "regdiffusion.data.utils": [[3, "module-regdiffusion.data.utils"]], "block (class in regdiffusion.models.regdiffusion)": [[4, "regdiffusion.models.regdiffusion.Block"]], "geneembeddings (class in regdiffusion.models.regdiffusion)": [[4, "regdiffusion.models.regdiffusion.GeneEmbeddings"]], "i_minus_a() (regdiffusion.models.regdiffusion.regdiffusion method)": [[4, "regdiffusion.models.regdiffusion.RegDiffusion.I_minus_A"]], "regdiffusion (class in regdiffusion.models.regdiffusion)": [[4, "regdiffusion.models.regdiffusion.RegDiffusion"]], "sinusoidalpositionembeddings (class in regdiffusion.models.regdiffusion)": [[4, "regdiffusion.models.regdiffusion.SinusoidalPositionEmbeddings"]], "forward() (regdiffusion.models.regdiffusion.block method)": [[4, "regdiffusion.models.regdiffusion.Block.forward"]], "forward() (regdiffusion.models.regdiffusion.geneembeddings method)": [[4, "regdiffusion.models.regdiffusion.GeneEmbeddings.forward"]], "forward() (regdiffusion.models.regdiffusion.regdiffusion method)": [[4, "regdiffusion.models.regdiffusion.RegDiffusion.forward"]], "forward() (regdiffusion.models.regdiffusion.sinusoidalpositionembeddings method)": [[4, "regdiffusion.models.regdiffusion.SinusoidalPositionEmbeddings.forward"]], "get_adj() (regdiffusion.models.regdiffusion.regdiffusion method)": [[4, "regdiffusion.models.regdiffusion.RegDiffusion.get_adj"]], "get_adj_() (regdiffusion.models.regdiffusion.regdiffusion method)": [[4, "regdiffusion.models.regdiffusion.RegDiffusion.get_adj_"]], "get_gene_emb() (regdiffusion.models.regdiffusion.regdiffusion method)": [[4, "regdiffusion.models.regdiffusion.RegDiffusion.get_gene_emb"]], "get_sampled_adj_() (regdiffusion.models.regdiffusion.regdiffusion method)": [[4, "regdiffusion.models.regdiffusion.RegDiffusion.get_sampled_adj_"]], "regdiffusion.models": [[4, "module-regdiffusion.models"]], "regdiffusion.models.regdiffusion": [[4, "module-regdiffusion.models.regdiffusion"]], "soft_thresholding() (regdiffusion.models.regdiffusion.regdiffusion method)": [[4, "regdiffusion.models.regdiffusion.RegDiffusion.soft_thresholding"]]}})