Search.setIndex({"docnames": ["index", "modules", "quick_tour", "regdiffusion", "regdiffusion.data", "regdiffusion.models"], "filenames": ["index.rst", "modules.rst", "quick_tour.rst", "regdiffusion.rst", "regdiffusion.data.rst", "regdiffusion.models.rst"], "titles": ["RegDiffusion", "regdiffusion", "Getting Startted with GRN inference using diffusion model", "regdiffusion package", "regdiffusion.data package", "regdiffusion.models package"], "terms": {"i": [0, 3, 4, 5], "veri": [0, 3], "fast": 0, "regulatori": [0, 3], "network": [0, 3], "infer": [0, 3, 5], "algorithm": 0, "base": [0, 3, 5], "probabilist": [0, 5], "diffus": [0, 3, 5], "model": [0, 1, 3], "It": [0, 3], "work": 0, "well": 0, "gene": [0, 3, 4, 5], "capabl": 0, "predict": [0, 3], "biolog": 0, "verifi": 0, "link": 0, "from": [0, 3, 4, 5], "singl": [0, 3, 4, 5], "cell": [0, 3, 4, 5], "rna": 0, "seq": [0, 4], "data": [0, 1, 3], "15": 0, "000": 0, "take": [0, 3, 5], "under": 0, "5": [0, 3, 5], "minut": 0, "modern": 0, "acceler": 0, "comput": [0, 5], "avail": [0, 4], "pypi": 0, "pip": 0, "grn": [0, 1], "us": [0, 3, 5], "packag": 1, "subpackag": 1, "submodul": 1, "beelin": [1, 3], "modul": 1, "microglia": [1, 3], "util": [1, 3], "content": 1, "evalu": 1, "grnevalu": [1, 3], "extract_node_2hop_neighborhood": [1, 3], "extract_node_neighbor": [1, 3], "extract_node_neighbors_as_indic": [1, 3], "extract_node_sourc": [1, 3], "extract_node_sources_as_indic": [1, 3], "extract_node_target": [1, 3], "extract_node_targets_as_indic": [1, 3], "generate_adj_list": [1, 3], "to_hdf5": [1, 3], "visualize_local_neighborhood": [1, 3], "read_hdf5": [1, 3], "logger": 1, "lightlogg": [1, 3], "check_early_stop": [1, 3], "finish": [1, 3], "log": [1, 3, 4], "save": [1, 3], "set_config": [1, 3], "start": [1, 3], "to_df": [1, 3], "load_logg": [1, 3], "trainer": 1, "regdiffusiontrain": [1, 3], "forward_pass": [1, 3], "get_adj": [1, 3, 5], "get_grn": [1, 3], "train": [1, 3, 5], "training_curv": [1, 3], "linear_beta_schedul": [1, 3], "power_beta_schedul": [1, 3], "cell_type_separ": [3, 4], "download_beelin": [3, 4], "load_beelin": [3, 4], "load_beeline_ground_truth": [3, 4], "download_regdiffusion_data": [3, 4], "load_atlas_microglia": [3, 4], "load_hammond_microglia": [3, 4], "download_fil": [3, 4], "block": [3, 5], "forward": [3, 5], "geneembed": [3, 5], "i_minus_a": [3, 5], "get_adj_": [3, 5], "get_gene_emb": [3, 5], "get_sampled_adj_": [3, 5], "soft_threshold": [3, 5], "sinusoidalpositionembed": [3, 5], "class": [3, 5], "ground_truth": 3, "gene_nam": 3, "metric": 3, "auroc": 3, "aupr": 3, "auprr": 3, "ep": 3, "epr": 3, "sourc": [3, 4, 5], "object": 3, "A": [3, 5], "gener": 3, "paramet": [3, 4, 5], "np": 3, "ndarrai": 3, "list": [3, 5], "either": [3, 4], "2d": 3, "numpi": 3, "arrai": 3, "hold": 3, "ground": [3, 4], "truth": [3, 4], "each": 3, "row": [3, 4], "an": 3, "edg": 3, "includ": 3, "name": 3, "target": 3, "node": 3, "For": [3, 5], "exampl": 3, "b": 3, "c": 3, "1d": 3, "make": 3, "sure": 3, "order": 3, "same": 3, "adjac": [3, 5], "matrix": [3, 5], "support": 3, "current": 3, "adj_matrix": 3, "tf_name": 3, "none": [3, 5], "top_gene_percentil": 3, "int": [3, 5], "analyz": 3, "between": [3, 5], "transcript": 3, "factor": 3, "The": [3, 5], "expect": [3, 5], "shape": 3, "In": 3, "mani": 3, "case": 3, "when": 3, "tf": 3, "ar": [3, 5], "specifi": [3, 5], "we": [3, 4], "have": 3, "squar": 3, "weight": 3, "probabl": 3, "float": [3, 5], "To": 3, "creat": 3, "you": 3, "need": [3, 5], "least": 3, "two": 3, "thing": 3, "correspond": [3, 4], "can": 3, "further": 3, "your": 3, "hdf5": 3, "format": 3, "method": 3, "load": [3, 4], "function": [3, 5], "thi": [3, 5], "If": [3, 4, 5], "larg": 3, "space": 3, "concern": 3, "mai": 3, "consid": 3, "provid": [3, 5], "valu": [3, 5], "calcul": 3, "cutoff": 3, "point": 3, "everi": [3, 5], "whose": 3, "absolut": 3, "below": 3, "set": [3, 4], "zero": 3, "later": 3, "spars": 3, "reduc": 3, "requir": 3, "come": 3, "visual": 3, "top": 3, "level": 3, "interfac": 3, "all": [3, 5], "option": 3, "onli": [3, 4], "k": 3, "kept": 3, "other": 3, "str": [3, 4], "20": 3, "datafram": 3, "panda": 3, "local": 3, "neighborhood": 3, "2": 3, "hop": 3, "around": 3, "select": [3, 4], "": 3, "inspect": 3, "node_s": 3, "size": [3, 5], "direct": 3, "neighbor": 3, "sort": 3, "3": [3, 5], "column": [3, 4], "dict": 3, "dictionari": 3, "slightli": 3, "faster": 3, "than": 3, "version": 3, "simpli": 3, "file_path": [3, 4], "as_spars": 3, "bool": 3, "fals": 3, "file": 3, "prefer": 3, "most": 3, "path": 3, "whether": 3, "8": 3, "edge_width": 3, "1": [3, 5], "0": [3, 4, 5], "font_siz": 3, "30": 3, "node_group_dict": 3, "cdn_resourc": 3, "remot": 3, "notebook": 3, "true": [3, 4], "vi": 3, "j": 3, "width": 3, "1st": 3, "2nd": 3, "font": 3, "label": 3, "kei": 3, "being": 3, "group": 3, "color": 3, "where": [3, 4], "resourc": 3, "default": [3, 5], "boolean": 3, "indic": 3, "happen": 3, "jupyt": 3, "read": 3, "see": 3, "document": 3, "detail": [3, 5], "result_dir": 3, "result_log": 3, "log_dat": 3, "lightweight": 3, "run": [3, 5], "complet": 3, "inspir": 3, "w": 3, "environ": 3, "also": 3, "multipl": 3, "separ": 3, "experi": 3, "dir": 3, "within": [3, 5], "date": 3, "custom": 3, "subdirectori": 3, "variabl": 3, "wai": 3, "item": 3, "10": 3, "save_now": 3, "end": [3, 4], "dump": 3, "stream": 3, "memori": [3, 4], "log_dict": 3, "step": [3, 4, 5], "contain": 3, "perform": [3, 5], "python": 3, "which": 3, "config": 3, "configur": 3, "futur": 3, "export": 3, "experiment": 3, "hyper": 3, "note": 3, "new": 3, "tidi": 3, "convert": 3, "df": 3, "json": 3, "exp_arrai": 3, "cell_typ": 3, "devic": 3, "cuda": 3, "t": [3, 5], "5000": 3, "start_nois": 3, "0001": 3, "end_nois": 3, "02": 3, "lr_nn": 3, "001": 3, "lr_adj": 3, "weight_decay_nn": 3, "weight_decay_adj": 3, "01": 3, "sparse_loss_coef": 3, "25": 3, "adj_dropout": [3, 5], "batch_siz": 3, "128": 3, "n_step": 3, "1000": 3, "train_split": 3, "train_split_se": 3, "123": 3, "eval_on_n_step": 3, "100": 3, "time_dim": [3, 5], "64": 3, "celltype_dim": [3, 5], "4": [3, 4, 5], "hidden_dim": [3, 5], "16": [3, 5], "init_coef": [3, 5], "compil": 3, "initi": [3, 5], "x_0": 3, "pass": [3, 5], "torch": 3, "floattensor": 3, "tensor": 3, "express": 3, "longtensor": 3, "time": [3, 5], "mean_schedul": 3, "mean": 3, "schedul": 3, "std_schedul": 3, "std": 3, "timestep": 3, "power": 3, "analyt": 3, "sc_data": 4, "cell_type_element_indic": 4, "sep": 4, "_": 4, "save_dir": 4, "remove_zip": 4, "data_dir": 4, "benchmark_data": 4, "hesc": 4, "benchmark_set": 4, "500_string": 4, "download": 4, "necessari": 4, "root": 4, "folder": 4, "locat": 4, "benchmark": 4, "dataset": 4, "choos": 4, "among": 4, "hhep": 4, "mdc": 4, "mesc": 4, "mhsc": 4, "gm": 4, "l": 4, "1000_string": 4, "500_non": 4, "chip": 4, "1000_non": 4, "500_chip": 4, "1000_chip": 4, "500_lofgof": 4, "1000_lofgof": 4, "lofgof": 4, "return": 4, "first": [4, 5], "element": 4, "scanpi": 4, "second": 4, "type": [4, 5], "tupl": 4, "file_nam": 4, "scp795": 4, "http": 4, "singlecel": 4, "broadinstitut": 4, "org": 4, "single_cel": 4, "studi": 4, "transcriptom": 4, "atla": 4, "mous": 4, "cerebellum": 4, "summari": 4, "just": 4, "count": 4, "ha": 4, "been": 4, "transform": 4, "hammond": 4, "p100": 4, "male": 4, "mice": 4, "url": 4, "chunk_siz": 4, "1024": 4, "in_dim": 5, "out_dim": 5, "x": 5, "ct": 5, "defin": 5, "call": 5, "should": 5, "overridden": 5, "subclass": 5, "although": 5, "recip": 5, "one": 5, "instanc": 5, "afterward": 5, "instead": 5, "sinc": 5, "former": 5, "care": 5, "regist": 5, "hook": 5, "while": 5, "latter": 5, "silent": 5, "ignor": 5, "them": 5, "n_gene": 5, "gene_dim": 5, "n_celltyp": 5, "architectur": 5, "pleas": 5, "refer": 5, "our": 5, "paper": 5, "nois": 5, "knowledg": 5, "neural": 5, "number": 5, "dimens": 5, "embed": 5, "would": 5, "celltyp": 5, "integ": 5, "hidden": 5, "layer": 5, "percentag": 5, "drop": 5, "dure": 5, "coeffici": 5, "multipli": 5, "regul": 5, "norm": 5, "tau": 5, "dim": 5, "theta": 5, "10000": 5}, "objects": {"": [[3, 0, 0, "-", "regdiffusion"]], "regdiffusion": [[3, 1, 1, "", "GRN"], [3, 1, 1, "", "GRNEvaluator"], [3, 1, 1, "", "LightLogger"], [3, 1, 1, "", "RegDiffusionTrainer"], [4, 0, 0, "-", "data"], [3, 0, 0, "-", "evaluator"], [3, 0, 0, "-", "grn"], [3, 3, 1, "", "load_logger"], [3, 0, 0, "-", "logger"], [5, 0, 0, "-", "models"], [3, 3, 1, "", "read_hdf5"], [3, 0, 0, "-", "trainer"]], "regdiffusion.GRN": [[3, 2, 1, "", "extract_node_2hop_neighborhood"], [3, 2, 1, "", "extract_node_neighbors"], [3, 2, 1, "", "extract_node_neighbors_as_indices"], [3, 2, 1, "", "extract_node_sources"], [3, 2, 1, "", "extract_node_sources_as_indices"], [3, 2, 1, "", "extract_node_targets"], [3, 2, 1, "", "extract_node_targets_as_indices"], [3, 2, 1, "", "generate_adj_list"], [3, 2, 1, "", "to_hdf5"], [3, 2, 1, "", "visualize_local_neighborhood"]], "regdiffusion.GRNEvaluator": [[3, 2, 1, "", "evaluate"]], "regdiffusion.LightLogger": [[3, 2, 1, "", "check_early_stopping"], [3, 2, 1, "", "finish"], [3, 2, 1, "", "log"], [3, 2, 1, "", "save"], [3, 2, 1, "", "set_configs"], [3, 2, 1, "", "start"], [3, 2, 1, "", "to_df"]], "regdiffusion.RegDiffusionTrainer": [[3, 2, 1, "", "forward_pass"], [3, 2, 1, "", "get_adj"], [3, 2, 1, "", "get_grn"], [3, 2, 1, "", "train"], [3, 2, 1, "", "training_curves"]], "regdiffusion.data": [[4, 0, 0, "-", "beeline"], [4, 0, 0, "-", "microglia"], [4, 0, 0, "-", "utils"]], "regdiffusion.data.beeline": [[4, 3, 1, "", "cell_type_separator"], [4, 3, 1, "", "download_beeline"], [4, 3, 1, "", "load_beeline"], [4, 3, 1, "", "load_beeline_ground_truth"]], "regdiffusion.data.microglia": [[4, 3, 1, "", "download_regdiffusion_data"], [4, 3, 1, "", "load_atlas_microglia"], [4, 3, 1, "", "load_hammond_microglia"]], "regdiffusion.data.utils": [[4, 3, 1, "", "download_file"]], "regdiffusion.evaluator": [[3, 1, 1, "", "GRNEvaluator"]], "regdiffusion.evaluator.GRNEvaluator": [[3, 2, 1, "", "evaluate"]], "regdiffusion.grn": [[3, 1, 1, "", "GRN"], [3, 3, 1, "", "read_hdf5"]], "regdiffusion.grn.GRN": [[3, 2, 1, "", "extract_node_2hop_neighborhood"], [3, 2, 1, "", "extract_node_neighbors"], [3, 2, 1, "", "extract_node_neighbors_as_indices"], [3, 2, 1, "", "extract_node_sources"], [3, 2, 1, "", "extract_node_sources_as_indices"], [3, 2, 1, "", "extract_node_targets"], [3, 2, 1, "", "extract_node_targets_as_indices"], [3, 2, 1, "", "generate_adj_list"], [3, 2, 1, "", "to_hdf5"], [3, 2, 1, "", "visualize_local_neighborhood"]], "regdiffusion.logger": [[3, 1, 1, "", "LightLogger"], [3, 3, 1, "", "load_logger"]], "regdiffusion.logger.LightLogger": [[3, 2, 1, "", "check_early_stopping"], [3, 2, 1, "", "finish"], [3, 2, 1, "", "log"], [3, 2, 1, "", "save"], [3, 2, 1, "", "set_configs"], [3, 2, 1, "", "start"], [3, 2, 1, "", "to_df"]], "regdiffusion.models": [[5, 0, 0, "-", "regdiffusion"]], "regdiffusion.models.regdiffusion": [[5, 1, 1, "", "Block"], [5, 1, 1, "", "GeneEmbeddings"], [5, 1, 1, "", "RegDiffusion"], [5, 1, 1, "", "SinusoidalPositionEmbeddings"]], "regdiffusion.models.regdiffusion.Block": [[5, 2, 1, "", "forward"]], "regdiffusion.models.regdiffusion.GeneEmbeddings": [[5, 2, 1, "", "forward"]], "regdiffusion.models.regdiffusion.RegDiffusion": [[5, 2, 1, "", "I_minus_A"], [5, 2, 1, "", "forward"], [5, 2, 1, "", "get_adj"], [5, 2, 1, "", "get_adj_"], [5, 2, 1, "", "get_gene_emb"], [5, 2, 1, "", "get_sampled_adj_"], [5, 2, 1, "", "soft_thresholding"]], "regdiffusion.models.regdiffusion.SinusoidalPositionEmbeddings": [[5, 2, 1, "", "forward"]], "regdiffusion.trainer": [[3, 1, 1, "", "RegDiffusionTrainer"], [3, 3, 1, "", "linear_beta_schedule"], [3, 3, 1, "", "power_beta_schedule"]], "regdiffusion.trainer.RegDiffusionTrainer": [[3, 2, 1, "", "forward_pass"], [3, 2, 1, "", "get_adj"], [3, 2, 1, "", "get_grn"], [3, 2, 1, "", "train"], [3, 2, 1, "", "training_curves"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"regdiffus": [0, 1, 3, 4, 5], "instal": 0, "get": [0, 2], "start": [0, 2], "grn": [2, 3], "infer": 2, "us": 2, "diffus": 2, "model": [2, 5], "packag": [3, 4, 5], "subpackag": 3, "submodul": [3, 4, 5], "evalu": 3, "modul": [3, 4, 5], "logger": 3, "trainer": 3, "content": [3, 4, 5], "data": 4, "beelin": 4, "microglia": 4, "util": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"RegDiffusion": [[0, "regdiffusion"]], "Installation": [[0, "installation"]], "Get Started:": [[0, null]], "regdiffusion": [[1, "regdiffusion"]], "Getting Startted with GRN inference using diffusion model": [[2, "getting-startted-with-grn-inference-using-diffusion-model"]], "regdiffusion package": [[3, "regdiffusion-package"]], "Subpackages": [[3, "subpackages"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"]], "regdiffusion.evaluator module": [[3, "module-regdiffusion.evaluator"]], "regdiffusion.grn module": [[3, "module-regdiffusion.grn"]], "regdiffusion.logger module": [[3, "module-regdiffusion.logger"]], "regdiffusion.trainer module": [[3, "module-regdiffusion.trainer"]], "Module contents": [[3, "module-regdiffusion"], [4, "module-regdiffusion.data"], [5, "module-regdiffusion.models"]], "regdiffusion.data package": [[4, "regdiffusion-data-package"]], "regdiffusion.data.beeline module": [[4, "module-regdiffusion.data.beeline"]], "regdiffusion.data.microglia module": [[4, "module-regdiffusion.data.microglia"]], "regdiffusion.data.utils module": [[4, "module-regdiffusion.data.utils"]], "regdiffusion.models package": [[5, "regdiffusion-models-package"]], "regdiffusion.models.regdiffusion module": [[5, "module-regdiffusion.models.regdiffusion"]]}, "indexentries": {"grn (class in regdiffusion)": [[3, "regdiffusion.GRN"]], "grn (class in regdiffusion.grn)": [[3, "regdiffusion.grn.GRN"]], "grnevaluator (class in regdiffusion)": [[3, "regdiffusion.GRNEvaluator"]], "grnevaluator (class in regdiffusion.evaluator)": [[3, "regdiffusion.evaluator.GRNEvaluator"]], "lightlogger (class in regdiffusion)": [[3, "regdiffusion.LightLogger"]], "lightlogger (class in regdiffusion.logger)": [[3, "regdiffusion.logger.LightLogger"]], "regdiffusiontrainer (class in regdiffusion)": [[3, "regdiffusion.RegDiffusionTrainer"]], "regdiffusiontrainer (class in regdiffusion.trainer)": [[3, "regdiffusion.trainer.RegDiffusionTrainer"]], "check_early_stopping() (regdiffusion.lightlogger method)": [[3, "regdiffusion.LightLogger.check_early_stopping"]], "check_early_stopping() (regdiffusion.logger.lightlogger method)": [[3, "regdiffusion.logger.LightLogger.check_early_stopping"]], "evaluate() (regdiffusion.grnevaluator method)": [[3, "regdiffusion.GRNEvaluator.evaluate"]], "evaluate() (regdiffusion.evaluator.grnevaluator method)": [[3, "regdiffusion.evaluator.GRNEvaluator.evaluate"]], "extract_node_2hop_neighborhood() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.extract_node_2hop_neighborhood"]], "extract_node_2hop_neighborhood() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.extract_node_2hop_neighborhood"]], "extract_node_neighbors() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.extract_node_neighbors"]], "extract_node_neighbors() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.extract_node_neighbors"]], "extract_node_neighbors_as_indices() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.extract_node_neighbors_as_indices"]], "extract_node_neighbors_as_indices() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.extract_node_neighbors_as_indices"]], "extract_node_sources() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.extract_node_sources"]], "extract_node_sources() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.extract_node_sources"]], "extract_node_sources_as_indices() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.extract_node_sources_as_indices"]], "extract_node_sources_as_indices() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.extract_node_sources_as_indices"]], "extract_node_targets() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.extract_node_targets"]], "extract_node_targets() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.extract_node_targets"]], "extract_node_targets_as_indices() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.extract_node_targets_as_indices"]], "extract_node_targets_as_indices() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.extract_node_targets_as_indices"]], "finish() (regdiffusion.lightlogger method)": [[3, "regdiffusion.LightLogger.finish"]], "finish() (regdiffusion.logger.lightlogger method)": [[3, "regdiffusion.logger.LightLogger.finish"]], "forward_pass() (regdiffusion.regdiffusiontrainer method)": [[3, "regdiffusion.RegDiffusionTrainer.forward_pass"]], "forward_pass() (regdiffusion.trainer.regdiffusiontrainer method)": [[3, "regdiffusion.trainer.RegDiffusionTrainer.forward_pass"]], "generate_adj_list() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.generate_adj_list"]], "generate_adj_list() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.generate_adj_list"]], "get_adj() (regdiffusion.regdiffusiontrainer method)": [[3, "regdiffusion.RegDiffusionTrainer.get_adj"]], "get_adj() (regdiffusion.trainer.regdiffusiontrainer method)": [[3, "regdiffusion.trainer.RegDiffusionTrainer.get_adj"]], "get_grn() (regdiffusion.regdiffusiontrainer method)": [[3, "regdiffusion.RegDiffusionTrainer.get_grn"]], "get_grn() (regdiffusion.trainer.regdiffusiontrainer method)": [[3, "regdiffusion.trainer.RegDiffusionTrainer.get_grn"]], "linear_beta_schedule() (in module regdiffusion.trainer)": [[3, "regdiffusion.trainer.linear_beta_schedule"]], "load_logger() (in module regdiffusion)": [[3, "regdiffusion.load_logger"]], "load_logger() (in module regdiffusion.logger)": [[3, "regdiffusion.logger.load_logger"]], "log() (regdiffusion.lightlogger method)": [[3, "regdiffusion.LightLogger.log"]], "log() (regdiffusion.logger.lightlogger method)": [[3, "regdiffusion.logger.LightLogger.log"]], "module": [[3, "module-regdiffusion"], [3, "module-regdiffusion.evaluator"], [3, "module-regdiffusion.grn"], [3, "module-regdiffusion.logger"], [3, "module-regdiffusion.trainer"], [4, "module-regdiffusion.data"], [4, "module-regdiffusion.data.beeline"], [4, "module-regdiffusion.data.microglia"], [4, "module-regdiffusion.data.utils"], [5, "module-regdiffusion.models"], [5, "module-regdiffusion.models.regdiffusion"]], "power_beta_schedule() (in module regdiffusion.trainer)": [[3, "regdiffusion.trainer.power_beta_schedule"]], "read_hdf5() (in module regdiffusion)": [[3, "regdiffusion.read_hdf5"]], "read_hdf5() (in module regdiffusion.grn)": [[3, "regdiffusion.grn.read_hdf5"]], "regdiffusion": [[3, "module-regdiffusion"]], "regdiffusion.evaluator": [[3, "module-regdiffusion.evaluator"]], "regdiffusion.grn": [[3, "module-regdiffusion.grn"]], "regdiffusion.logger": [[3, "module-regdiffusion.logger"]], "regdiffusion.trainer": [[3, "module-regdiffusion.trainer"]], "save() (regdiffusion.lightlogger method)": [[3, "regdiffusion.LightLogger.save"]], "save() (regdiffusion.logger.lightlogger method)": [[3, "regdiffusion.logger.LightLogger.save"]], "set_configs() (regdiffusion.lightlogger method)": [[3, "regdiffusion.LightLogger.set_configs"]], "set_configs() (regdiffusion.logger.lightlogger method)": [[3, "regdiffusion.logger.LightLogger.set_configs"]], "start() (regdiffusion.lightlogger method)": [[3, "regdiffusion.LightLogger.start"]], "start() (regdiffusion.logger.lightlogger method)": [[3, "regdiffusion.logger.LightLogger.start"]], "to_df() (regdiffusion.lightlogger method)": [[3, "regdiffusion.LightLogger.to_df"]], "to_df() (regdiffusion.logger.lightlogger method)": [[3, "regdiffusion.logger.LightLogger.to_df"]], "to_hdf5() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.to_hdf5"]], "to_hdf5() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.to_hdf5"]], "train() (regdiffusion.regdiffusiontrainer method)": [[3, "regdiffusion.RegDiffusionTrainer.train"]], "train() (regdiffusion.trainer.regdiffusiontrainer method)": [[3, "regdiffusion.trainer.RegDiffusionTrainer.train"]], "training_curves() (regdiffusion.regdiffusiontrainer method)": [[3, "regdiffusion.RegDiffusionTrainer.training_curves"]], "training_curves() (regdiffusion.trainer.regdiffusiontrainer method)": [[3, "regdiffusion.trainer.RegDiffusionTrainer.training_curves"]], "visualize_local_neighborhood() (regdiffusion.grn method)": [[3, "regdiffusion.GRN.visualize_local_neighborhood"]], "visualize_local_neighborhood() (regdiffusion.grn.grn method)": [[3, "regdiffusion.grn.GRN.visualize_local_neighborhood"]], "cell_type_separator() (in module regdiffusion.data.beeline)": [[4, "regdiffusion.data.beeline.cell_type_separator"]], "download_beeline() (in module regdiffusion.data.beeline)": [[4, "regdiffusion.data.beeline.download_beeline"]], "download_file() (in module regdiffusion.data.utils)": [[4, "regdiffusion.data.utils.download_file"]], "download_regdiffusion_data() (in module regdiffusion.data.microglia)": [[4, "regdiffusion.data.microglia.download_regdiffusion_data"]], "load_atlas_microglia() (in module regdiffusion.data.microglia)": [[4, "regdiffusion.data.microglia.load_atlas_microglia"]], "load_beeline() (in module regdiffusion.data.beeline)": [[4, "regdiffusion.data.beeline.load_beeline"]], "load_beeline_ground_truth() (in module regdiffusion.data.beeline)": [[4, "regdiffusion.data.beeline.load_beeline_ground_truth"]], "load_hammond_microglia() (in module regdiffusion.data.microglia)": [[4, "regdiffusion.data.microglia.load_hammond_microglia"]], "regdiffusion.data": [[4, "module-regdiffusion.data"]], "regdiffusion.data.beeline": [[4, "module-regdiffusion.data.beeline"]], "regdiffusion.data.microglia": [[4, "module-regdiffusion.data.microglia"]], "regdiffusion.data.utils": [[4, "module-regdiffusion.data.utils"]], "block (class in regdiffusion.models.regdiffusion)": [[5, "regdiffusion.models.regdiffusion.Block"]], "geneembeddings (class in regdiffusion.models.regdiffusion)": [[5, "regdiffusion.models.regdiffusion.GeneEmbeddings"]], "i_minus_a() (regdiffusion.models.regdiffusion.regdiffusion method)": [[5, "regdiffusion.models.regdiffusion.RegDiffusion.I_minus_A"]], "regdiffusion (class in regdiffusion.models.regdiffusion)": [[5, "regdiffusion.models.regdiffusion.RegDiffusion"]], "sinusoidalpositionembeddings (class in regdiffusion.models.regdiffusion)": [[5, "regdiffusion.models.regdiffusion.SinusoidalPositionEmbeddings"]], "forward() (regdiffusion.models.regdiffusion.block method)": [[5, "regdiffusion.models.regdiffusion.Block.forward"]], "forward() (regdiffusion.models.regdiffusion.geneembeddings method)": [[5, "regdiffusion.models.regdiffusion.GeneEmbeddings.forward"]], "forward() (regdiffusion.models.regdiffusion.regdiffusion method)": [[5, "regdiffusion.models.regdiffusion.RegDiffusion.forward"]], "forward() (regdiffusion.models.regdiffusion.sinusoidalpositionembeddings method)": [[5, "regdiffusion.models.regdiffusion.SinusoidalPositionEmbeddings.forward"]], "get_adj() (regdiffusion.models.regdiffusion.regdiffusion method)": [[5, "regdiffusion.models.regdiffusion.RegDiffusion.get_adj"]], "get_adj_() (regdiffusion.models.regdiffusion.regdiffusion method)": [[5, "regdiffusion.models.regdiffusion.RegDiffusion.get_adj_"]], "get_gene_emb() (regdiffusion.models.regdiffusion.regdiffusion method)": [[5, "regdiffusion.models.regdiffusion.RegDiffusion.get_gene_emb"]], "get_sampled_adj_() (regdiffusion.models.regdiffusion.regdiffusion method)": [[5, "regdiffusion.models.regdiffusion.RegDiffusion.get_sampled_adj_"]], "regdiffusion.models": [[5, "module-regdiffusion.models"]], "regdiffusion.models.regdiffusion": [[5, "module-regdiffusion.models.regdiffusion"]], "soft_thresholding() (regdiffusion.models.regdiffusion.regdiffusion method)": [[5, "regdiffusion.models.regdiffusion.RegDiffusion.soft_thresholding"]]}})